// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`setIn - vegaCode 1`] = `
"
{
  \\"$schema\\": \\"https://vega.github.io/schema/vega/v5.json\\",
  \\"description\\": \\"A wheat plot example, which combines elements of dot plots and histograms.\\",
  \\"width\\": 500,
  \\"padding\\": 5,

  \\"signals\\": [
    { \\"name\\": \\"symbolDiameter\\", \\"value\\": 4,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": 1, \\"max\\": 8, \\"step\\": 0.25} },
    { \\"name\\": \\"binOffset\\", \\"value\\": 0,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": -0.1, \\"max\\": 0.1} },
    { \\"name\\": \\"binStep\\", \\"value\\": 0.075,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": 0.001, \\"max\\": 0.2, \\"step\\": 0.001} },
    { \\"name\\": \\"height\\", \\"update\\": \\"extent[1] * (1 + symbolDiameter)\\" }
  ],

  \\"data\\": [
    {
      \\"name\\": \\"points\\",
      \\"url\\": \\"data/normal-2d.json\\",
      \\"transform\\": [
        {
          \\"type\\": \\"bin\\", \\"field\\": \\"u\\",
          \\"extent\\": [-1, 1],
          \\"anchor\\": {\\"signal\\": \\"binOffset\\"},
          \\"step\\": {\\"signal\\": \\"binStep\\"},
          \\"nice\\": false,
          \\"signal\\": \\"bins\\"
        },
        {
          \\"type\\": \\"stack\\",
          \\"groupby\\": [\\"bin0\\"],
          \\"sort\\": {\\"field\\": \\"u\\"}
        },
        {
          \\"type\\": \\"extent\\", \\"signal\\": \\"extent\\",
          \\"field\\": \\"y1\\"
        }
      ]
    }
  ],

  \\"scales\\": [
    {
      \\"name\\": \\"xscale\\",
      \\"type\\": \\"linear\\",
      \\"range\\": \\"width\\",
      \\"domain\\": [-1, 1]
    },
    {
      \\"name\\": \\"yscale\\",
      \\"type\\": \\"linear\\",
      \\"range\\": \\"height\\",
      \\"domain\\": [0, {\\"signal\\": \\"extent[1]\\"}]
    }
  ],

  \\"axes\\": [
    { \\"orient\\": \\"bottom\\", \\"scale\\": \\"xscale\\",
      \\"values\\": {\\"signal\\": \\"sequence(bins.start, bins.stop + bins.step, bins.step)\\"},
      \\"domain\\": false, \\"ticks\\": false, \\"labels\\": false, \\"grid\\": true,
      \\"zindex\\": 0 },
    {\\"orient\\": \\"bottom\\", \\"scale\\": \\"xscale\\", \\"zindex\\": 1}
  ],

  \\"marks\\": [
    {
      \\"type\\": \\"symbol\\",
      \\"from\\": {\\"data\\": \\"points\\"},
      \\"encode\\": {
        \\"enter\\": {
          \\"fill\\": {\\"value\\": \\"transparent\\"},
          \\"strokeWidth\\": {\\"value\\": 0.5}
        },
        \\"update\\": {
          \\"x\\": {\\"scale\\": \\"xscale\\", \\"field\\": \\"u\\"},
          \\"y\\": {\\"scale\\": \\"yscale\\", \\"field\\": \\"y0\\"},
          \\"size\\": {\\"signal\\": \\"symbolDiameter * symbolDiameter\\"},
          \\"stroke\\": {\\"value\\": \\"steelblue\\"}
        },
        \\"hover\\": {
          \\"stroke\\": {\\"value\\": \\"green\\"}
        }
      }
    }
  ]
}
"
`;

exports[`setIn - vegaCode 2`] = `
"
{
  \\"$schema\\": \\"https://vega.github.io/schema/vega/v5.json\\",
  \\"description\\": \\"A wheat plot example, which combines elements of dot plots and histograms.\\",
  \\"width\\": 500,
  \\"padding\\": 5,

  \\"signals\\": [
    { \\"name\\": \\"symbolDiameter\\", \\"value\\": 4,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": 1, \\"max\\": 8, \\"step\\": 0.25} },
    { \\"name\\": \\"binOffset\\", \\"value\\": 0,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": -0.1, \\"max\\": 0.1} },
    { \\"name\\": \\"binStep\\", \\"value\\": 0.075,
      \\"bind\\": {\\"input\\": \\"range\\", \\"min\\": 0.001, \\"max\\": 0.2, \\"step\\": 0.001} },
    { \\"name\\": \\"height\\", \\"update\\": \\"extent[1] * (1 + symbolDiameter)\\" }
  ],

  \\"data\\": [
    {
      \\"name\\": \\"points\\",
      \\"url\\": \\"data/normal-2d.json\\",
      \\"transform\\": [
        {
          \\"type\\": \\"bin\\", \\"field\\": \\"u\\",
          \\"extent\\": [-1, 1],
          \\"anchor\\": {\\"signal\\": \\"binOffset\\"},
          \\"step\\": {\\"signal\\": \\"binStep\\"},
          \\"nice\\": false,
          \\"signal\\": \\"bins\\"
        },
        {
          \\"type\\": \\"stack\\",
          \\"groupby\\": [\\"bin0\\"],
          \\"sort\\": {\\"field\\": \\"u\\"}
        },
        {
          \\"type\\": \\"extent\\", \\"signal\\": \\"extent\\",
          \\"field\\": \\"y1\\"
        }
      ]
    }
  ],

  \\"scales\\": [
    {
      \\"name\\": \\"xscale\\",
      \\"type\\": \\"linear\\",
      \\"range\\": \\"width\\",
      \\"domain\\": [-1, 1]
    },
    {
      \\"name\\": \\"yscale\\",
      \\"type\\": \\"linear\\",
      \\"range\\": \\"height\\",
      \\"domain\\": [0, {\\"signal\\": \\"extent[1]\\"}]
    }
  ],

  \\"axes\\": [
    { \\"orient\\": \\"bottom\\", \\"scale\\": \\"xscale\\",
      \\"values\\": {\\"signal\\": \\"sequence(bins.start, bins.stop + bins.step, bins.step)\\"},
      \\"domain\\": false, \\"ticks\\": false, \\"labels\\": false, \\"grid\\": true,
      \\"zindex\\": 0 },
    {\\"orient\\": \\"bottom\\", \\"scale\\": \\"xscale\\", \\"zindex\\": 1}
  ],

  \\"marks\\": [
    {
      \\"type\\": \\"symbol\\",
      \\"from\\": {\\"data\\": \\"points\\"},
      \\"encode\\": {
        \\"enter\\": {
          \\"fill\\": {\\"value\\": \\"transparent\\"},
          \\"strokeWidth\\": {\\"value\\": 0.5}
        },
        \\"update\\": \\"purple\\",
        \\"hover\\": {
          \\"stroke\\": {\\"value\\": \\"green\\"}
        }
      }
    }
  ]
}
"
`;

exports[`syntaxNodeToAbsPath 1`] = `
Array [
  Array [
    -1,
    "JsonText",
  ],
  Array [
    0,
    "Object",
  ],
  Array [
    8,
    "Property",
  ],
  Array [
    1,
    "Array",
  ],
  Array [
    0,
    "Object",
  ],
  Array [
    2,
    "Property",
  ],
  Array [
    1,
    "Object",
  ],
  Array [
    2,
    "Property",
  ],
  Array [
    1,
    "Object",
  ],
  Array [
    0,
    "Property",
  ],
  Array [
    1,
    "Object",
  ],
  Array [
    0,
    "Property",
  ],
  Array [
    1,
    "String",
  ],
]
`;

exports[`syntaxNodeToAbsPath 2`] = `
Array [
  Array [
    -1,
    "JsonText",
  ],
  Array [
    0,
    "Object",
  ],
  Array [
    6,
    "Property",
  ],
  Array [
    1,
    "Array",
  ],
  Array [
    1,
    "Object",
  ],
  Array [
    3,
    "Property",
  ],
  Array [
    1,
    "Array",
  ],
  Array [
    1,
    "Object",
  ],
  Array [
    0,
    "Property",
  ],
  Array [
    1,
    "String",
  ],
]
`;

exports[`syntaxNodeToKeyPath 1`] = `
Array [
  "marks",
  0,
  "encode",
  "hover",
  "stroke",
  "value",
  "value___value",
]
`;

exports[`syntaxNodeToKeyPath 2`] = `
Array [
  "marks",
  0,
  "encode",
  "update",
  "stroke",
  "value",
  "value___value",
]
`;

exports[`syntaxNodeToKeyPath 3`] = `
Array [
  "marks___key",
]
`;

exports[`syntaxNodeToKeyPath 4`] = `
Array [
  "scales",
  1,
  "domain",
  1,
  "signal",
  "signal___value",
]
`;
